"use strict";angular.module("d20-engine",["ngRoute"]),angular.module("d20-engine").factory("AbstractLib",["$log","Engine",function(a,b){var c=function(a){this.libName=a,this.registered={},b.registerLib(this.libName,new c(this))};return c.prototype.change=function(b,c){if(void 0===b||void 0===c)return[];if(!_.isString(c))return a.warn("AbstractLib.change called with bad changes parameter",c),[];var d=c.split(","),e=this;_.forEach(d,function(a){e.changeStat(b,a)})},c.prototype.prepareChange=function(a,b,c){a[this.libName]||(a[this.libName]={}),a[this.libName][b]||(a[this.libName][b]=c),a.old||(a.old={}),a.old[this.libName]||(a.old[this.libName]={}),a.old[this.libName][b]=a[this.libName][b]},c.prototype.changeStat=function(c,d){if(void 0===c||void 0===d)return null;if(!_.isString(d))return a.warn("AbstractLib.changeStat called with bad change parameter",d),null;var e=d.split("[-+*/=]"),f=d.substring(e[0].length,e[0].length+1);return isNaN(e[1])||(e[1]=_.toNumber(e[1])),2===e.length&&_.find(["-","+","*","/","="],f)&&_.isNumber(e[1])?(this.registered[e[0]]?(this.prepareChange(c,e[0],this.registered[e[0]].min),c[this.libName][e[0]]=b.compute(c[this.libName][e[0]],f,e[1],this.registered[e[0]].min,this.registered[e[0]].max)):(this.prepareChange(c,e[0],null),c[this.libName][e[0]]=b.compute(c[this.libName][e[0]],f,e[1],null,null)),a.debug(e[0]+" changed from "+c.old[this.libName][e[0]]+" to "+c[this.libName][e[0]],c),void b.changed(this.libName,c,e[0])):(a.warn("AbstractLib.changeStat called with bad change parameter",d),null)},c.prototype.changed=function(a,b,c){_.forOwn(this.registered,function(d){d.changed(a,b,c)})},c.prototype.register=function(b,c){this.registered[b]&&a.warn("Stat "+b+" already defined, overwriting.",this.registered[b],c),this.registered[b]=c},new Proxy(c,{construct:function(a){return new Proxy(new a,{get:function(a,b){return _.has(a.prototype,b)?a.prototype[b]:_.has(a.registered,b)?a.registered[b]:a[b]},set:function(){return!0}})}})}]),angular.module("d20-engine").factory("Engine",["$log",function(a){var b=function(){this.registeredLibs={}};b.prototype.registerLib=function(b,c){this.registeredLibs[b]&&a.warn("Lib "+b+" already defined, overwriting.",this.registeredLibs[b],c),this.registeredLibs[b]=c},b.prototype.change=function(b,c,d){return this.registeredLibs[b]?void this.registeredLibs[b].change(c,d):void a.warn("Lib "+b+" not existing, changing nothing.")},b.prototype.changed=function(b,c,d){return this.registeredLibs[b]?void _.forOwn(this.registeredLibs,function(a){a.changed(b,c,d)}):void a.warn("Lib "+b+" not existing, changing nothing.")},b.prototype.compute=function(b,c,d,e,f){switch(c){case"-":b-=this.roll(d);break;case"+":b+=this.roll(d);break;case"*":b*=this.roll(d);break;case"/":b/=this.roll(d);break;case"=":b=this.roll(d);break;default:return a.warn("Engine.compute called with bad operator",c),b}return isNaN(e)||(b=Math.max(_.toNumber(e),b)),isNaN(f)||(b=Math.min(_.toNumber(f),b)),b},b.prototype.roll=function(b){if(void 0===b)return a.warn("Engine.roll called without parameter, returning 0"),0;var c=b.split("d");if(0===c.length||c.length>2||!_.isNumber(c[0])||!_.isNumber(c[1]))return a.warn("Engine.roll called with bad parameter, returning 0",b),0;if(1===c.length)return c[0];var d=0;return _.forEach(_.range(c[0]),function(){d+=Math.random(1,c[1]+1)}),d};var c=new Proxy(b,{construct:function(a){return new Proxy(new a,{get:function(a,b){return _.has(a.prototype,b)?a.prototype[b]:_.has(a.registeredLibs,b)?a.registeredLibs[b]:a[b]},set:function(){return!0}})}});return new c}]),angular.module("d20-engine").directive("d20PerkDescription",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"description.html"}}}),angular.module("d20-engine").directive("d20PerkName",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"name.html"}}}),angular.module("d20-engine").directive("d20PerkValue",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"value.html"}}}),angular.module("d20-engine").factory("AbstractPerk",["$log","PerkLib",function(a,b){function c(a){this.min=0,this.max=null,this.name="Perk-"+d,d++,this.description="",b.register(a,this)}var d=0;c.prototype.changed=function(b,c,d){a.debug("Change detected on "+b,this,c,d)}}]),angular.module("d20-engine").factory("PerkLib",["AbstractLib",function(a){return new a("perk")}]),angular.module("d20-engine").directive("d20StatDescription",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","StatLib",function(a,b){a.StatLib=b}],templateUrl:function(a,b){return"stat/views/"+(b.stat?b.stat+"_":"")+"description.html"}}}),angular.module("d20-engine").directive("d20StatName",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","StatLib",function(a,b){a.StatLib=b}],templateUrl:function(a,b){return"stat/views/"+(b.stat?b.stat+"_":"")+"name.html"}}}),angular.module("d20-engine").directive("d20StatValue",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","StatLib",function(a,b){a.StatLib=b}],templateUrl:function(a,b){return"stat/views/"+(b.stat?b.stat+"_":"")+"value.html"}}}),angular.module("d20-engine").factory("AbstractStat",["$log","StatLib",function(a,b){function c(a){this.min=null,this.max=null,this.name="Stat-"+d,d++,this.description="",b.register(a,this)}var d=0;c.prototype.changed=function(b,c,d){a.debug("Change detected on "+b,this,c,d)}}]),angular.module("d20-engine").factory("StatLib",["AbstractLib",function(a){return new a("stat")}]),angular.module("d20-engine").directive("d20StatusDescription",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"description.html"}}}),angular.module("d20-engine").directive("d20StatusName",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"name.html"}}}),angular.module("d20-engine").directive("d20StatusValue",function(){return{restrict:"E",scope:{name:"@",for:"="},controller:["$scope","PerkLib",function(a,b){a.PerkLib=b}],templateUrl:function(a,b){return"perk/views/"+(b.stat?b.stat+"_":"")+"value.html"}}}),angular.module("d20-engine").factory("AbstractPerk",["$log","PerkLib",function(a,b){function c(a){this.min=0,this.max=null,this.name="Perk-"+d,d++,this.description="",b.register(a,this)}var d=0;c.prototype.changed=function(b,c,d){a.debug("Change detected on "+b,this,c,d)}}]),angular.module("d20-engine").factory("StatusLib",["$log","AbstractLib","Engine",function(a,b,c){var d=new b("status");d.changeStat=function(b,d){if(void 0===b||void 0===d)return null;if(!_.isString(d))return a.warn("StatusLib.changeStat called with bad change parameter",d),null;var e=d.split("[-+*/=]"),f=d.substring(e[0].length,e[0].length+1),g=d.substring(e[0].length+1+e[1].length,e[0].length+1+e[1].length+1);return isNaN(e[1])||(e[1]=_.toNumber(e[1])),isNaN(e[2])||(e[2]=_.toNumber(e[2])),3===e.length&&_.find(["-","+","*","/","="],f)&&_.find(["-","+","*","/","="],g)&&_.isNumber(e[1])&&_.isNumber(e[2])?(this.registered[e[0]]?(this.prepareChange(b,e[0],{value:this.registered[e[0]].min,time:this.registered[e[0]].minTime}),b[this.libName][e[0]].value=c.compute(b[this.libName][e[0]].value,f,e[1],this.registered[e[0]].min,this.registered[e[0]].max),b[this.libName][e[0]].time=c.compute(b[this.libName][e[0]].time,g,e[2],this.registered[e[0]].minTime,this.registered[e[0]].maxTime),!isNaN(this.registered[e[0]].min)&&b[this.libName][e[0]].time<=_.toNumber(this.registered[e[0]].min)&&delete b[this.libName][e[0]]):(this.prepareChange(b,e[0],{value:null,time:null}),b[this.libName][e[0]].value=c.compute(b[this.libName][e[0]].value,f,e[1],null,null),b[this.libName][e[0]].time=c.compute(b[this.libName][e[0]].time,g,e[2],null,null)),a.debug(e[0]+" changed from "+b.old[this.libName][e[0]]+" to "+b[this.libName][e[0]],b),void c.changed(this.libName,b,e[0])):(a.warn("StatusLib.changeStat called with bad change parameter",d),null)}}]),angular.module("d20-engine").run(["$templateCache",function(a){a.put("perk/views/description.html","<span>{{PerkLib[name].description}}</span>\r\n"),a.put("perk/views/name.html","<span ng-class=\"{'up': creature.perk[name] > creature.old.perk[name], 'down': creature.perk[name] < creature.old.perk[name]}\" ng-title=\"PerkLib[name].description\">PerkLib[name].name</span>\r\n"),a.put("perk/views/value.html","<span ng-class=\"{'up': creature.perk[name] > creature.old.perk[name], 'down': creature.perk[name] < creature.old.perk[name]}\" ng-title=\"PerkLib[name].description\">{{creature.perk[name]}}</span>\r\n"),a.put("stat/views/description.html","<span>{{StatLib[name].description}}</span>\r\n"),a.put("stat/views/name.html","<span ng-class=\"{'up': creature.stat[name] > creature.old.stat[name], 'down': creature.stat[name] < creature.old.stat[name]}\" ng-title=\"StatLib[name].description\">StatLib[name].name</span>\r\n"),a.put("stat/views/value.html","<span ng-class=\"{'up': creature.stat[name] > creature.old.stat[name], 'down': creature.stat[name] < creature.old.stat[name]}\" ng-title=\"StatLib[name].description\">{{creature.stat[name]}}</span>\r\n"),a.put("status/views/description.html","<span>{{PerkLib[name].description}}</span>\r\n"),a.put("status/views/name.html","<span ng-class=\"{'up': creature.perk[name] > creature.old.perk[name], 'down': creature.perk[name] < creature.old.perk[name]}\" ng-title=\"PerkLib[name].description\">PerkLib[name].name</span>\r\n"),a.put("status/views/value.html","<span ng-class=\"{'up': creature.perk[name] > creature.old.perk[name], 'down': creature.perk[name] < creature.old.perk[name]}\" ng-title=\"PerkLib[name].description\">{{creature.perk[name]}}</span>\r\n")}]);